# Generated by Django 4.2.19 on 2025-02-18 05:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tournament.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='', editable=False, unique=True)),
                ('match_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('stage', models.CharField(choices=[('GROUP', 'Group Stage'), ('RO16', 'Round of 16'), ('QUARTER', 'Quarter Final'), ('SEMI', 'Semi Final'), ('FINAL', 'Final')], max_length=20)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('PENDING', 'Pending Confirmation'), ('CONFIRMED', 'Confirmed'), ('DISPUTED', 'Disputed')], default='SCHEDULED', max_length=20)),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('dispute_reason', models.TextField(blank=True)),
                ('group', models.CharField(blank=True, max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='', editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('number_of_groups', models.IntegerField(default=2)),
                ('teams_per_group', models.IntegerField(default=4)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('REGISTRATION', 'Registration'), ('GROUP_STAGE', 'Group Stage'), ('KNOCKOUT', 'Knockout Stage'), ('COMPLETED', 'Completed')], default='REGISTRATION', max_length=20)),
                ('group_stage_complete', models.BooleanField(default=False)),
                ('knockout_stage_complete', models.BooleanField(default=False)),
                ('organizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='', editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('player_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)])),
                ('registration_code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('registration_complete', models.BooleanField(default=False)),
                ('registration_expires', models.DateTimeField(blank=True, null=True)),
                ('strength_rating', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('manager', models.ForeignKey(default=tournament.models.get_admin_user, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
            options={
                'unique_together': {('tournament', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_score', models.IntegerField(default=0)),
                ('away_score', models.IntegerField(default=0)),
                ('home_confirmed', models.BooleanField(default=False)),
                ('away_confirmed', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('extra_time', models.BooleanField(default=False)),
                ('penalties', models.BooleanField(default=False)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tournament.match')),
                ('team_away', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_results', to='tournament.team')),
                ('team_home', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_results', to='tournament.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team_away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='tournament.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='tournament.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament'),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psn_id', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['tournament', 'stage', 'group'], name='tournament__tournam_3e4f96_idx'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(('team_home', models.F('team_away')), _negated=True), name='no_self_matches'),
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together={('tournament', 'team_home', 'team_away', 'stage')},
        ),
    ]
